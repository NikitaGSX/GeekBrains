#!/usr/bin/env python3.5
# -*- coding: utf-8 -*-

import random
import datetime
import locale
import pytils
import math

r = int(input('Введите число:\n'))
n = range(r)
square_roots = []
unique = []

# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми
# числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random
#
number = [random.randint(-100,100) for i in n]
print(number)
#
# Задача-1:
# # Дан список, заполненный произвольными целыми числами, получите новый
# список,
# # элементами которого будут квадратные корни элементов исходного списка,
# # но только если результаты извлечения корня не имеют десятичной части и
# # если такой корень вообще можно извлечь
# # Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]
#
for each in number:
    if each > 0 and (math.sqrt(each) - int(math.sqrt(each)) == 0):
        square_roots.append(int(math.sqrt(each)))
        print("Квадратный корень из числа {} равен {}".format(each, int(math.sqrt(each))))
    elif each < 0:
        print("Число {} меньше нуля".format(each))
    else:
        print("Квадратный корень из числа {} извлечь без остатка нельзя".format(each))
#
# # Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# # Ваша задача вывести дату в текстовом виде, например: второе ноября 2013
# года.
# # Склонением пренебречь (2000 года, 2010 года)
#
print(pytils.dt.ru_strftime(u"%d %B %Y", inflected=True, date=datetime.datetime.now()))
#
# # Задача-4: Дан список, заполненный произвольными целыми числами.
# # Получите новый список, элементами которого будут:
# # а) неповторяющиеся элементы исходного списка:
# # например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4,
# 5, 6]
# # б) элементы исходного списка, которые не имеют повторений:
# # например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]
#
for i, each in enumerate(square_roots):
    if i == 0:
        unique.append(each)
    else:
        if each not in unique:
            unique.append(each)
print('{} уникальный список\n {} число извлечённых квадратных корней'.format(unique, square_roots))
